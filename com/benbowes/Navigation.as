package com.benbowes{  	import flash.net.*;	import flash.system.*;	import flash.display.*;	import flash.events.*;	import flash.utils.getDefinitionByName;   	import flash.external.ExternalInterface;	import com.benbowes.EventNavigation;	import com.benbowes.Global;	import com.asual.swfaddress.SWFAddress;	import com.asual.swfaddress.SWFAddressEvent;	import com.greensock.*;	import com.greensock.easing.*;	public class Navigation extends Sprite {		private var SCOPE;		private var currentSelected:MovieClip = null;		private var XML_DATA:XML;		private var LEN:int;		private var CURRENT_BG;		private var PREVIOUS_BG;		private var BG:MovieClip;		private var tempMc:MovieClip;		public function Navigation() {			SCOPE = this;			SCOPE.addEventListener(Event.ADDED_TO_STAGE,init,false,0,true);		}		private function init(e:Event = null) {			BG = SCOPE.parent.bg;						XML_DATA = Global.FLASHVARS.navigationXML;			LEN = XML_DATA.navigationItem.length();						for (var i:int = 0; i<LEN; i++) {				var mc = new menuBtn();				mc.cacheAsBitmap = true;				mc.y = 97 + (i*21);				mc.itemIndex = i;				mc.bgImageFullUrl = XML_DATA.navigationItem[i].bgImage.text();   				mc.bgImageAlign = XML_DATA.navigationItem[i].bgImagePosition.text();				mc.labelText = XML_DATA.navigationItem[i].buttonLabel.text();				SCOPE.addChild(mc);				TweenMax.from(mc,1,{alpha:0, x:30, delay:i*0.05, blurFilter:{blurX:16}, ease:Quint.easeInOut});								// SET SWF ADDRESS FROM navigation.xml				mc.SWFAddressLocation = XML_DATA.navigationItem[i].SWFAddressLocation.text();				mc.SWFAddressTitle = XML_DATA.navigationItem[i].SWFAddressTitle.text();				mc.className = XML_DATA.navigationItem[i].className.text();				mc.name = XML_DATA.navigationItem[i].buttonInstanceName.text();				mc.navTweenToX = XML_DATA.navigationItem[i].navTweenToX.text();				mc.navTweenToY = XML_DATA.navigationItem[i].navTweenToY.text();				mc.addEventListener (MouseEvent.CLICK, handleNavClick, false, 0, true);			}						SWFAddress.addEventListener (SWFAddressEvent.CHANGE, handleSWFAddress, false,0,true);    			SCOPE.addEventListener (EventNavigation.NEW_SECTION, transitionContentBegin, false,0,true);						logo.buttonMode = true;			logo.addEventListener(MouseEvent.CLICK, handleLogoClick, false, 0, true);			logo.addEventListener(MouseEvent.ROLL_OVER, over, false, 0, true);			logo.addEventListener(MouseEvent.ROLL_OUT, out, false, 0, true);		}			private function handleLogoClick(e:Event = null):void{         							SWFAddress.setValue("");			SWFAddress.setTitle("ILLURA APARTMENTS WEST MELBOURNE");		}  				private function over(e){		   TweenMax.to (e.target,0.3,{alpha:0.7, ease:Quint.easeOut}); 		}				private function out(e){			TweenMax.to (e.target,0.4,{alpha:1, ease:Quint.easeInOut}); 		}						private function handleNavClick(e:Event):void{			setButton(e.target);					SWFAddress.setValue(e.target.SWFAddressLocation);			SWFAddress.setTitle(e.target.SWFAddressTitle);		}				private function setButton(mc){		   //trace("handleNavClick nav");    						if(mc != currentSelected){ // set button enabled/disabled    								if(mc != null){					//////////////////////////////////////////////////					// Send Google Analitics Here using externalInterface see my80.com.au | use the string mc.SWFAddressLocation					//////////////////////////////////////////////////   					ExternalInterface.call("pageTracker._trackPageview", "/" + mc.SWFAddressLocation);     					trace("pageTracker._trackPageview", "/" + mc.SWFAddressLocation);				}else{					//////////////////////////////////////////////////					// Send Google Analitics Here using externalInterface see my80.com.au | use the string mc.SWFAddressLocation					//////////////////////////////////////////////////   					ExternalInterface.call("pageTracker._trackPageview", "/");     					trace("pageTracker._trackPageview", "/");				}								if(mc != null){					mc.select(); // select new btn    				}				if(currentSelected != null){ // for first click this is null					currentSelected.deselect();  // deselect old btn				}				currentSelected = mc; // set for next time			}		}				///////////////////////////////////////////////////////////////////////////////////////				private function handleSWFAddress (e:SWFAddressEvent) {     		   			var address = SWFAddress.getPath();			//var path:Array = SWFAddress.getPathNames();						var LIST:XMLList =  XML_DATA.navigationItem.(SWFAddressLocation == address.substr(1)); // Do a search thru navigation.xml to find current node 			tempMc = SCOPE.getChildByName(String(LIST.buttonInstanceName)); // Get which button was clicked by grabbing <buttonInstanceName> in current node                				//  L O G O  C L I C K  -- Heads to empty home			if (address == "/" || address == "" || address == "/home") {			   //  dispatchEvent (new EventNavigation("com.benbowes.PageDummy"));								// Move navigation into place	   			setButton(null); // deselect all buttons in this nav   				SCOPE.parent.parent.getChildByName("home").NAVIGATION_HOME.setButton(null); // deselect all buttons in home nav			    Global.FLASHVARS.homeHidden = false;	 				TweenLite.to(SCOPE.parent.parent.getChildByName("home"),2,{x:0, ease:Quint.easeInOut});          			    TweenLite.to(SCOPE.parent.parent.getChildByName("mainContentHolder"),2,{x:-stage.stageWidth, ease:Quint.easeInOut});  						} else { // grab info needed from currentSelected menuBtn				dispatchEvent (new EventNavigation(tempMc.className));								// load new bg and hide homeBg if it is being shown			    SCOPE.parent.parent.getChildByName("mainContentHolder").bg.setUp({				    fullUrl:tempMc.bgImageFullUrl,				    align:tempMc.bgImageAlign			    });	            			    TweenLite.to(SCOPE.parent.parent.getChildByName("home"),2,{x:stage.stageWidth, ease:Quint.easeInOut});          			    TweenLite.to(SCOPE.parent.parent.getChildByName("mainContentHolder"),2,{x:0, ease:Quint.easeInOut});          			    Global.FLASHVARS.homeHidden = true;			   								         			    setButton(tempMc);   							// Move navigation into place  			   			}      		}				private function transitionContentBegin (e:EventNavigation) {  			 					   //if(tempMc.navTweenToY != SCOPE.y || tempMc.navTweenToX != SCOPE.x){  // move nav only if position of nav has chaned    				TweenLite.to(SCOPE, 0.5, {delay:0, alpha:0, ease:Quint.easeInOut, onComplete:positionItems});  				TweenLite.to(SCOPE, 0.5, {delay:1, alpha:1, ease:Quint.easeInOut});      		   // }									try{   // run transition out function if available				SCOPE.parent.parent.getChildByName("mainContentHolder").container.getChildAt(0).hide(); 			}catch(err){}  			//trace("transBegin: "+e.section)			try {				// this is the not first time this function has been called so there is something in the container to remove				var ins = SCOPE.parent.parent.getChildByName("mainContentHolder").container.getChildAt(0);				//ins.transitionOut();				//trace("ins = "+ins, SCOPE.parent.container)				TweenLite.to (SCOPE.parent.parent.getChildByName("mainContentHolder").container,0.8,{y:"+20", alpha:0, ease:Quint.easeInOut, onComplete:transitionContentEnd, onCompleteParams:[ins,String(e.section)]});			} catch (err) {				// this is the first time this function has been called so there is no need to remove anything from the container				transitionContentEnd (null,String(e.section));			}		}		private function transitionContentEnd (oldIns:*, clas:String) {			if (oldIns != null) {				SCOPE.parent.parent.getChildByName("mainContentHolder").container.removeChild (oldIns);			}			var myClass = getDefinitionByName(clas);			SCOPE.parent.parent.getChildByName("mainContentHolder").container.addChild (new myClass());  			 			TweenMax.killTweensOf(SCOPE.parent.parent.getChildByName("mainContentHolder").container);						SCOPE.parent.setChildIndex(SCOPE.parent.parent.getChildByName("mainContentHolder").container,SCOPE.parent.numChildren-1);			TweenLite.to (SCOPE.parent.parent.getChildByName("mainContentHolder").container,1,{delay:0.5, alpha:1,y:0, ease:Quint.easeInOut});  		} 				private function positionItems():void{   			   		    TweenMax.to(SCOPE, 0, {x:int(tempMc.navTweenToX), y:int(tempMc.navTweenToY), ease:Quint.easeInOut}); 					   // TweenMax.to(SCOPE.parent.parent.getChildByName("mainContentHolder").container, 1.6, {x:mainX, y:mainY, ease:Quint.easeInOut});   		}	}}		 