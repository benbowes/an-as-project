package com.benbowes{	import flash.display.*;	import flash.text.*;	import flash.events.*;	import com.greensock.*;	import com.greensock.easing.*;	public class DropDown extends MovieClip {		private var SCOPE = this;		private var ITEMS:Array = [];		public var viewableCount:int = 4;		public var autoScrollEasing:Number = 3;		private var autoScrollRelativeY:Number; 		private var focusOutlineColor:uint = 0x5DA146; 		var index=0;		public function DropDown ():void {			SCOPE.addEventListener (Event.ADDED_TO_STAGE,init,false,0,true);			SCOPE.addEventListener (Event.REMOVED_FROM_STAGE,kill,false,0,true);		}		public function setItems (val:Array):void {			ITEMS = val;			reset ();			setUp ();		}		public function getValue ():String {			return SCOPE.dropDownMaster.tf.text;		}		private function setUp ():void {			var len = ITEMS.length;			for (var i=0; i<len; i++) {				var item = new DropDown_ListItem();				item.tf.text = ITEMS[i];				item.y = i * item.height;				SCOPE.container.addChild (item);			}		}		private function reset ():void {			var len = SCOPE.container.numChildren;			for (var i=0; i<len; i++) {				SCOPE.container.removeChild (SCOPE.container.getChildAt(i));			}		}		///////////////////////////////////////////////////////////////////		private function init (e:Event=null):void {			SCOPE.removeEventListener (Event.ADDED_TO_STAGE,init);			SCOPE.dropDownMaster.hit.buttonMode = true;			SCOPE.dropDownMaster.hit.mouseChildren = false;			SCOPE.dropDownMaster.hit.addEventListener (MouseEvent.CLICK,toggleVisibility,false,0,true);			TweenMax.to (SCOPE.masker,0,{height:0, ease:Quint.easeInOut});					}		private function hideMe (e:Event=null):void {			// dont auto format this line!!!! TweenMax.to (SCOPE.masker,0,{height:0, ease:Quint.easeInOut, onComplete:function(){visibl=false}   });			TweenMax.to (SCOPE.masker,0,{height:0, ease:Quint.easeInOut});			TweenMax.to (SCOPE,0,{glowFilter:{color:focusOutlineColor, alpha:0, blurX:0, blurY:0, strength:0}});    			stage.removeEventListener (MouseEvent.MOUSE_UP,hideMe);			SCOPE.removeEventListener (Event.ENTER_FRAME,autoScroll);		}				public function toggleVisibility (e:Event=null):void {			// place at top depth5			var mc = MovieClip(SCOPE);			mc.parent.setChildIndex (mc,mc.parent.numChildren-1);			TweenMax.killChildTweensOf(mc.masker, false);		    	   						if (SCOPE.masker.height>10) { 				TweenMax.to (mc.masker,0.3,{height:0, ease:Quint.easeInOut});				stage.removeEventListener (MouseEvent.MOUSE_UP,hideMe);				SCOPE.removeEventListener (Event.ENTER_FRAME,autoScroll);			} else {  				TweenMax.to (mc,0,{glowFilter:{color:focusOutlineColor, alpha:1, blurX:2, blurY:2, strength:4}});    				var openCount = (ITEMS.length > viewableCount) ? viewableCount : ITEMS.length;				TweenMax.to (mc.masker,0.3,{height:openCount*24, ease:Quint.easeInOut});				stage.addEventListener (MouseEvent.MOUSE_UP,hideMe,false,0,true);				if(ITEMS.length > viewableCount){					SCOPE.addEventListener (Event.ENTER_FRAME,autoScroll,false,0,true);				}			}		}						private function autoScroll (e:Event=null):void {						//trace(index++);						if (mouseX > SCOPE.masker.x && mouseX < (SCOPE.masker.x + SCOPE.masker.width)) {				// if we are close to the edge then scroll to the edge				var yMous = mouseY - SCOPE.dropDownMaster.height;				///////////////////////////////// ADD BOTTOM AND TOP SENSITIVITY				(yMous < 10) ? yMous = SCOPE.dropDownMaster.y: null;				(yMous > SCOPE.masker.height - 10) ? yMous = SCOPE.masker.height: null;								autoScrollRelativeY = (yMous) / (SCOPE.masker.height);				if (autoScrollRelativeY < 0) {					autoScrollRelativeY = 0;				} else if (autoScrollRelativeY > 1) {					autoScrollRelativeY = 1;				}			}			SCOPE.container.y += (((-autoScrollRelativeY * (SCOPE.container.height - SCOPE.masker.height)) - SCOPE.container.y + SCOPE.dropDownMaster.height) /autoScrollEasing);		}				/////////////////////////////////////////////////////////////////		public function kill (e:Event) {						trace(SCOPE, "kill")			TweenMax.killTweensOf(SCOPE as MovieClip);			TweenMax.killChildTweensOf(SCOPE as MovieClip);									stage.removeEventListener (MouseEvent.CLICK,hideMe);			SCOPE.removeEventListener (Event.REMOVED_FROM_STAGE,kill);			SCOPE.dropDownMaster.hit.removeEventListener (MouseEvent.CLICK,toggleVisibility);			SCOPE = null;		}	}}